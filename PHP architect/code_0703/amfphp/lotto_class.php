<?php/* -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Project Name : mySecondRemoting Filename :		lottoclass.php Written by :	Seth Wilson, P.Eng Date :			May 2003 Description:	This lotto_class object is used with Flash Remoting with AMFPHP 				to grab lotto numbers from an information website				and create a little movie displaying each number after a pause				(To build suspense of course!!!) Revisions:   1.   2.   3. Future Upgrades   1.   2.   . -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= */class lotto_class {	var $URL = "http://www.lotterycanada.com/lottery/?job=show_results&lottery=na_lotto_649";	var $dateSearchString = "<TD VALIGN=MIDDLE ROWSPAN=4 CLASS=\"body\">";	var $dateEndString = "</TD>";	var $numberSearchString = "CLASS=\"body\"><B>";	var $numberEndString ="</B></TD>";	var $maxNumbers = 7;	var $lines = "";		/**        * Constructor to sets return types of Methods        * Param     None        */       	function lotto_class() {		$this->methodTable = array(			"getLottoDate" => array(				"description" => "Grab the Draw Date and return it",				"access" => "remote", // values are private, public, remote				"roles" => "role, list", // not used				"arguments" => array ("arg1")			),			"getLottoNumbers" => array(				"description" => "Grab the Lotto Numbers and return as an array",				"access" => "remote", //  values are private, public, remote				"roles" => "role, list", // not used				"arguments" => array ("arg1")			)		);		// Go and get the HTML source from the lottery site		$this->lines = file($this->URL);	}	function getLottoDate() {			// Here we loop through discarding all but the line we are looking for		// and then with that line we dispose of everything but the date				foreach ($this->lines as $line_num => $line) {						$dateLine = strpos($line, $this->dateSearchString);						if ($dateLine <> false) { // then we have the date				$pos1 = $dateLine; 				$pos1 += strlen($this->dateSearchString); 		// strlen = string length				$pos2 = strpos($line,$this->dateEndString);				$date = substr($line,$pos1,$pos2-$pos1);				return $date;				break;			} //if									}	}  // getLottoDate Function	function getLottoNumbers() {				$i = 0;		// Here we loop through discarding all but the line we are looking for		// and then with that line we dispose of everything but the lotto numbers		foreach ($this->lines as $line_num => $line) {						$numberLine = strpos($line,$this->numberSearchString);			if ($numberLine <> false ) { // then we have the number															$pos1 = $numberLine;				$pos1 += strlen($this->numberSearchString); 						$pos2 = strpos($line,$this->numberEndString);				$numbers[$i] = substr($line,$pos1,$pos2-$pos1);				// if we have reached the maximum number of lotto numbers (incl. Bonus) then				// return the numbers and break out of the code.				$i++;				if ($i == $this->maxNumbers) {					return $numbers;					break;				}			} //if		} //foreach 	}  // getLottoNumber Function		/**        * Accessor set method for changing the URL for spidering        * Arguments     new URL		* Returns	 nothing        */	function setURL($URLarg) {		$this->URL = $URLarg;		} // setURL function		/**        * Accessor set method for changing the search string used to find the date        * Arguments     new date search string		* Returns	 nothing        */	function setDateSearchString($dateArg) {		$this->dateSearchString = $dateArg;		} // setDateSearchString function		/**        * Accessor set method for changing the search string used to find the numbers        * Arguments     new number seach string		* Returns	 nothing        */	function setNumberSearchString($numberArg) {		$this->numberSearchString = $numberArg;		} // setNumberSearchString function		/**        * Accessor set method for changing the search string used to find where the date ends        * Arguments     new date search string		* Returns	 nothing        */	function setDateEndString($dateArg) {		$this->dateEndString = $dateArg;		} // setDateEndString function		/**        * Accessor set method for changing the search string used		* to find where the numbers end in the HTML code        * Arguments     new number seach string		* Returns	 nothing        */	function setNumberEndString($numberArg) {		$this->numberEndString = $numberArg;		} // setNumberEndString function		/**        * Accessor set method for changing the Max number of lotto numbers        * Arguments     new number		* Returns	 nothing        */	function setMaxLottoNumbers($numberArg) {		$this->maxNumbers = $numberArg;		} // setMaxLottoNumbers function} //class?>